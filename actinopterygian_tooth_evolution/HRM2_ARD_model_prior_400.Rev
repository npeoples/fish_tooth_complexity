### ARD model with 2 hidden rates, with fixed root state probability ###
### Prior of 400 transitions ###

morpho <- readDiscreteCharacterData("tip_states_FINAL.nex")
morpho_exp = morpho.expandCharacters( 2 )
morpho_exp.show()
moves = VectorMoves()
monitors = VectorMonitors()
phylogeny <- readTrees("pruned_tree_FINAL.nexus")[1]

# we will fill the non-zero elements below
for (i in 1:4) {
  for (j in 1:4) {
    rates[i][j] <- 0.0
  }
}

NUM_HIDDEN_STATES = 2
rate_pr := phylogeny.treeLength() / 400
H <- 0.587405
SD_PRIOR <- 1/H

rate_gain_median ~ dnExponential( rate_pr )
rate_gain_sd ~ dnExponential( SD_PRIOR )
moves.append( mvScale( rate_gain_median, weight=2 ) )
moves.append( mvScale( rate_gain_sd, weight=2 ) )
rate_gain := fnDiscretizeDistribution( dnLognormal( ln(rate_gain_median), rate_gain_sd ), 2 )

rate_loss_median ~ dnExponential( rate_pr )
rate_loss_sd ~ dnExponential( SD_PRIOR )
moves.append( mvScale( rate_loss_median, weight=2 ) )
moves.append( mvScale( rate_loss_sd, weight=2 ) )
rate_loss := fnDiscretizeDistribution( dnLognormal( ln(rate_loss_median), rate_loss_sd ), NUM_HIDDEN_STATES )

switch_slow_fast ~ dnExponential( rate_pr )
switch_fast_slow ~ dnExponential( rate_pr )
moves.append( mvScale( switch_slow_fast, weight=2 ) )
moves.append( mvScale( switch_fast_slow, weight=2 ) )

rates[1][2] := rate_gain[1]     # 0S->1S
rates[1][3] := switch_slow_fast # 0S->0F
rates[2][1] := rate_loss[1]     # 1S->0S
rates[2][4] := switch_slow_fast # 1S->1F
rates[3][1] := switch_fast_slow # 0F->0S
rates[3][4] := rate_gain[2]     # 0F->1F
rates[4][2] := switch_fast_slow # 1F->1S
rates[4][3] := rate_loss[2]     # 1F->0F

Q_morpho := fnFreeK(rates, rescaled=FALSE)

rf <- [0.5, 0, 0.5, 0]

phyMorpho ~ dnPhyloCTMC(tree=phylogeny, Q=Q_morpho, rootFrequencies=rf, type="NaturalNumbers")
phyMorpho.clamp(morpho_exp)

mymodel = model(phylogeny)
monitors.append( mnModel(filename="HRM2_ARD_output_400/hrm2_ard_400.log", printgen=1) )
monitors.append( mnScreen(printgen=1) )
monitors.append( mnJointConditionalAncestralState(tree=phylogeny,
                                                  ctmc=phyMorpho,
                                                  filename="HRM2_ARD_output_400/hrm2_ard_400.states.txt",
                                                  type="NaturalNumbers",
                                                  printgen=250,
                                                  withTips=true,
                                                  withStartStates=false) )
monitors.append( mnStochasticCharacterMap(ctmc=phyMorpho,
                                          filename="HRM2_ARD_output_400/hrm2_ard_400_stoch_char_map.log",
                                          printgen=250,
                                          include_simmap=true) )

mymcmc = mcmc(mymodel, monitors, moves, nruns=1, combine="mixed")
mymcmc.run(generations=50000, tuningInterval=200)

anc_states_stoch_map = readAncestralStateTrace("HRM2_ARD_output_400/hrm2_ard_400_stoch_char_map.log")

characterMapTree(tree=phylogeny, 
ancestral_state_trace_vector=anc_states_stoch_map,
character_file="HRM2_ARD_output_400/hrm2_ard_400_marginal_character.tree",
posterior_file="HRM2_ARD_output_400/hrm2_ard_400_marginal_posterior.tree",
burnin=0.25,
num_time_slices=500,
reconstruction="marginal")

q()




